services:
  # postgres
  db:
    image: postgres:14.1-alpine
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=checkin-system
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - checkin-system-network

  # backend
  backend:
    build:
      context: ./backend
      dockerfile: "Dockerfile"
      args:
        VERSION: ${VERSION:-latest}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
      tags:
        - quay.io/d_rk/checkin-system-backend:${VERSION:-latest}
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: quay.io/d_rk/checkin-system-backend:${VERSION:?error}
    container_name: backend
    restart: unless-stopped
    links:
      - db
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_DRIVER=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=checkin-system
      - DB_PORT=5432
      - DB_SSL_MODE=disable
      - CORS_ALLOWED_ORIGINS=*
      - CHECKIN_RETENTION_DAYS=365
      - API_SECRET=${API_SECRET}
      - TOKEN_EXPIRY_MINUTES=60
      - ADMIN_PASSWORD=${API_ADMIN_PASSWORD}
      - USE_SSH_TUNNEL=true
      - SSH_HOST=host.docker.internal
      - SSH_USER=root
      - SSH_PASSWORD=check1n!
    networks:
      - checkin-system-network
    volumes:
      - /tmp:/tmp
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # frontend
  frontend:
    build:
      context: ./frontend
      args:
        VERSION: ${VERSION:-latest}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
      dockerfile: "Dockerfile"
      tags:
        - quay.io/d_rk/checkin-system-frontend:${VERSION:-latest}
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: quay.io/d_rk/checkin-system-frontend:${VERSION:?error}
    container_name: frontend
    restart: unless-stopped
    links:
      - backend
    ports:
      - "80:80"
    networks:
      - checkin-system-network

  # rfid-reader
  rfid-reader:
    build:
      context: ./raspi/rfid_reader
      dockerfile: "Dockerfile"
      tags:
        - quay.io/d_rk/checkin-system-reader:${VERSION:-latest}
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: quay.io/d_rk/checkin-system-reader:${VERSION:?error}
    container_name: rfid-reader
    restart: unless-stopped
    privileged: true
    environment:
      - API_BASEURL=http://backend:8080
      - API_USER=admin
      - API_PASSWORD=${API_ADMIN_PASSWORD}
    links:
      - backend
    networks:
      - checkin-system-network
  watchtower:
    container_name: watchtower
    hostname: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      WATCHTOWER_POLL_INTERVAL: "60"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LOG_LEVEL: "debug"
# volume for db data
volumes:
  db:
    driver: local

networks:
  checkin-system-network:
    driver: bridge
